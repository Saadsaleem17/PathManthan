{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\PathManthan\\\\src\\\\components\\\\ChatBot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport '../styles/ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Check if API key is available\n  const apiKey = process.env.REACT_APP_GEMINI_API_KEY;\n  if (!apiKey) {\n    console.error('Gemini API key is not set in environment variables');\n  }\n  const genAI = new GoogleGenerativeAI(apiKey || '');\n  const model = genAI.getGenerativeModel({\n    model: \"gemini-pro\"\n  });\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    if (!apiKey) {\n      setMessages(prev => [...prev, {\n        text: \"Error: API key is not configured. Please set up your Gemini API key.\",\n        isUser: false\n      }]);\n      return;\n    }\n    const userMessage = inputMessage.trim();\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setInputMessage('');\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      // Create a chat history context for the AI\n      const chatHistory = messages.map(msg => msg.isUser ? `User: ${msg.text}` : `Assistant: ${msg.text}`).join('\\n');\n\n      // Prepare the prompt with context\n      const prompt = `Previous conversation:\\n${chatHistory}\\n\\nUser: ${userMessage}\\n\\nAssistant:`;\n      const result = await model.generateContent(prompt);\n      if (!result || !result.response) {\n        throw new Error('No response from API');\n      }\n      const botMessage = result.response.text();\n      if (!botMessage) {\n        throw new Error('Empty response from API');\n      }\n      setMessages(prev => [...prev, {\n        text: botMessage,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error('Error details:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      setApiError(errorMessage);\n      setMessages(prev => [...prev, {\n        text: \"I'm sorry, I encountered an error. Please try again. Error: \" + errorMessage,\n        isUser: false\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: () => setIsOpen(!isOpen),\n      children: isOpen ? '×' : '💬'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Course Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-indicator\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: \"Hello! I'm your AI course assistant. I can help you find courses, answer questions about different topics, or provide learning recommendations. How can I help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.isUser ? 'user-message' : 'bot-message'}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Ask about courses or topics...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !inputMessage.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"/fLeik5Z4hKYstSXxbKacLjJU2g=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","GoogleGenerativeAI","jsxDEV","_jsxDEV","ChatBot","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","apiError","setApiError","messagesEndRef","apiKey","process","env","REACT_APP_GEMINI_API_KEY","console","error","genAI","model","getGenerativeModel","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","prev","text","isUser","userMessage","chatHistory","map","msg","join","prompt","result","generateContent","response","Error","botMessage","errorMessage","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/PathManthan/src/components/ChatBot.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\nimport '../styles/ChatBot.css';\r\n\r\nconst ChatBot: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Array<{ text: string; isUser: boolean }>>([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Check if API key is available\r\n  const apiKey = process.env.REACT_APP_GEMINI_API_KEY;\r\n  if (!apiKey) {\r\n    console.error('Gemini API key is not set in environment variables');\r\n  }\r\n  \r\n  const genAI = new GoogleGenerativeAI(apiKey || '');\r\n  const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n    \r\n    if (!apiKey) {\r\n      setMessages(prev => [...prev, { \r\n        text: \"Error: API key is not configured. Please set up your Gemini API key.\", \r\n        isUser: false \r\n      }]);\r\n      return;\r\n    }\r\n\r\n    const userMessage = inputMessage.trim();\r\n    setMessages(prev => [...prev, { text: userMessage, isUser: true }]);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n    setApiError(null);\r\n\r\n    try {\r\n      // Create a chat history context for the AI\r\n      const chatHistory = messages.map(msg => \r\n        msg.isUser ? `User: ${msg.text}` : `Assistant: ${msg.text}`\r\n      ).join('\\n');\r\n\r\n      // Prepare the prompt with context\r\n      const prompt = `Previous conversation:\\n${chatHistory}\\n\\nUser: ${userMessage}\\n\\nAssistant:`;\r\n      \r\n      const result = await model.generateContent(prompt);\r\n      \r\n      if (!result || !result.response) {\r\n        throw new Error('No response from API');\r\n      }\r\n\r\n      const botMessage = result.response.text();\r\n      if (!botMessage) {\r\n        throw new Error('Empty response from API');\r\n      }\r\n\r\n      setMessages(prev => [...prev, { text: botMessage, isUser: false }]);\r\n    } catch (error) {\r\n      console.error('Error details:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\r\n      setApiError(errorMessage);\r\n      setMessages(prev => [...prev, { \r\n        text: \"I'm sorry, I encountered an error. Please try again. Error: \" + errorMessage, \r\n        isUser: false \r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Chat Button */}\r\n      <button \r\n        className=\"chat-button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        {isOpen ? '×' : '💬'}\r\n      </button>\r\n\r\n      {/* Chat Window */}\r\n      {isOpen && (\r\n        <div className=\"chat-window\">\r\n          <div className=\"chat-header\">\r\n            <h3>AI Course Assistant</h3>\r\n            {apiError && <div className=\"error-indicator\">⚠️</div>}\r\n          </div>\r\n          \r\n          <div className=\"messages-container\">\r\n            {messages.length === 0 && (\r\n              <div className=\"welcome-message\">\r\n                Hello! I'm your AI course assistant. I can help you find courses, answer questions about different topics, or provide learning recommendations. How can I help you today?\r\n              </div>\r\n            )}\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`message ${message.isUser ? 'user-message' : 'bot-message'}`}\r\n              >\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n            {isLoading && (\r\n              <div className=\"message bot-message\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <form onSubmit={handleSendMessage} className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              placeholder=\"Ask about courses or topics...\"\r\n              disabled={isLoading}\r\n            />\r\n            <button type=\"submit\" disabled={isLoading || !inputMessage.trim()}>\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}